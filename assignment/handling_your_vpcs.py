# Handling your VPCs

이번 Lab assignment의 목적은 여러분께서 배운 AWS CLI를 사용해서 간단히 여러분의 VPC 정보를 관리하는 프로그램을 만들겠습니다. 프로그램은 매우 간단합니다.

## Problmes
### 임의의 10개의 VPCs 생성하기
첫 번째 목적은 임의로 10개의 VPC를 생성하는 것 입니다. 아래 조건에 따라 설정해주면 됩니다.

- VPC의 in/out bound는 임의로 설정하여도 되나, 최대한 다양하게 설정해주면 좋겠습니다.
- 생성된 10개의 VPC 정보를 객체로 저장하진 않지만, 생성된 ID와 생성된 시간은 Log 파일을 만들어 `csv` 또는 `log` 파일에 저장한다.
- 한개의 VPC를 생성한 후 5초 정도의 시간을 두고 다음 VPC를 생성한다. [reference](https://stackoverflow.com/questions/13293269/how-would-i-stop-a-while-loop-after-n-amount-of-time)
- 잘못된 처리가 발생할 경우, exception 처리를 하고 exception 처리 정보는 log에 기록을 남긴다.


### 생성된 10개의 VPCs를 삭제하기
첫 번째 단계를 통해 생성된 VPCs 삭제한다. 아래 조건에 따라 코드를 작성합니다.

- 기 생성된 VPC 정보를 AWS로 부터 받아와서 VPC groupID를 저장한다.
- 저장된 groupID를 순차적으로 삭제한다.
- 삭제시 삭제되는 groupID와 삭제된 시간을 이전에 만든 Log 파일에 추가하여 기록한다.
- 잘못된 처리가 발생할 경우, exception 처리를 하고 exception 처리 정보는 log에 기록을 남긴다.

### 생성된 로그 데이터를 S3에 전송하기
모든 단계를 종료한 후 생성된 log 파일을 s3 버킷으로 이동 시킵니다. 아래 조건에 따라 코드를 작성합니다.

- 버킷의 이름을 임의로 설정하되, 해당 버킷의 이름이 이미 존재하는지 확인 후 없을 경우에만 새롭게 버킷을 생성합니다.
- 생성된 파일을 전송하되, 해당 파일이 이미 버킷에 있을 경우, 해당 파일을 다운로드 한후 다운로드된 파일의 내용과 새롭게 생성된 파일을 합쳐서 업로드 합니다.
- 합칠경우 새롭게 작성된 내용이 뒤로 갈 수 있게 만들어 줍니다.


## 제출
작성된 프로그램은 github을 통해 제출하되, AWS key등 보안정보에 유의하여 제출합니다. 로그 파일은 포함하여 제출할 필요는 없습니다.
